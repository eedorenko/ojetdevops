{
  "name": "oj-gantt",
  "version": "5.0.0",
  "jetVersion": "5.0.0",
  "displayName": "Gantt",
  "preview": true,
  "roles": [
    "application"
  ],
  "description": "Displays scheduling information graphically, making it easier to plan, coordinate, and track various tasks and resources.",
  "properties": {
    "animationOnDataChange": {
      "description": "Defines the animation that is applied on data changes.",
      "type": "string",
      "displayName": "Animation On Data Change",
      "value": "none",
      "enumValues": [
        "auto",
        "none"
      ],
      "propertyEditorValues": {
        "auto": {
          "displayName": "Auto"
        },
        "none": {
          "displayName": "None"
        }
      }
    },
    "animationOnDisplay": {
      "description": "Defines the animation that is shown on initial display.",
      "type": "string",
      "displayName": "Animation On Display",
      "value": "none",
      "enumValues": [
        "auto",
        "none"
      ],
      "propertyEditorValues": {
        "auto": {
          "displayName": "Auto"
        },
        "none": {
          "displayName": "None"
        }
      }
    },
    "axisPosition": {
      "description": "The position of the major and minor axis.",
      "type": "string",
      "displayName": "Axis Position",
      "value": "top",
      "enumValues": [
        "bottom",
        "top"
      ],
      "propertyEditorValues": {
        "bottom": {
          "displayName": "Bottom"
        },
        "top": {
          "displayName": "Top"
        }
      }
    },
    "dependencies": {
      "description": "An array of objects that defines dependencies between tasks. Also accepts a Promise that will resolve with an array for deferred data rendering. No data will be rendered if the Promise is rejected.",
      "type": "Array<Object>|Promise",
      "displayName": "Dependencies",
      "value": null
    },
    "end": {
      "description": "The end time of the Gantt. A valid value is required in order for the Gantt to properly render. See Date and Time Formats for more details on the required string formats.",
      "type": "string",
      "displayName": "End",
      "value": ""
    },
    "gridlines": {
      "description": "An object specifying whether to display or hide the horizontal and vertical grid lines.",
      "type": "Object",
      "displayName": "Gridlines",
      "value": {
        "horizontal": "auto",
        "vertical": "auto"
      },
      "properties": {
        "horizontal": {
          "description": "Horizontal gridlines. The default value is \"auto\", which means Gantt will decide whether the grid lines should be made visible or hidden. See the gridlines attribute for usage examples.",
          "type": "string",
          "value": "auto",
          "enumValues": [
            "auto",
            "hidden",
            "visible"
          ],
          "propertyEditorValues": {
            "auto": {
              "displayName": "Auto"
            },
            "hidden": {
              "displayName": "Hidden"
            },
            "visible": {
              "displayName": "Visible"
            }
          }
        },
        "vertical": {
          "description": "Vertical gridlines. The default value is \"auto\", which means Gantt will decide whether the grid lines should be made visible or hidden. See the gridlines attribute for usage examples.",
          "type": "string",
          "value": "auto",
          "enumValues": [
            "auto",
            "hidden",
            "visible"
          ],
          "propertyEditorValues": {
            "auto": {
              "displayName": "Auto"
            },
            "hidden": {
              "displayName": "Hidden"
            },
            "visible": {
              "displayName": "Visible"
            }
          }
        }
      }
    },
    "majorAxis": {
      "description": "An object with the following properties, used to define the major time axis. If not specified, no major time axis is shown.",
      "type": "Object",
      "displayName": "Major Axis",
      "value": "{\"converter\": {\"default\": null, \"seconds\": oj.Validation.converterFactory(oj.ConverterFactory.CONVERTER_TYPE_DATETIME).createConverter({'hour': 'numeric', 'minute': '2-digit', 'second': '2-digit'}), \"minutes\": oj.Validation.converterFactory(oj.ConverterFactory.CONVERTER_TYPE_DATETIME).createConverter({'hour': 'numeric', 'minute': '2-digit'}), \"hours\": oj.Validation.converterFactory(oj.ConverterFactory.CONVERTER_TYPE_DATETIME).createConverter({'hour': 'numeric'}), \"days\": oj.Validation.converterFactory(oj.ConverterFactory.CONVERTER_TYPE_DATETIME).createConverter({'month': 'numeric', 'day': '2-digit'}), \"weeks\": oj.Validation.converterFactory(oj.ConverterFactory.CONVERTER_TYPE_DATETIME).createConverter({'month': 'numeric', 'day': '2-digit'}), \"months\": oj.Validation.converterFactory(oj.ConverterFactory.CONVERTER_TYPE_DATETIME).createConverter({'month': 'long'}), \"quarters\": oj.Validation.converterFactory(oj.ConverterFactory.CONVERTER_TYPE_DATETIME).createConverter({'month': 'long'}), \"years\": oj.Validation.converterFactory(oj.ConverterFactory.CONVERTER_TYPE_DATETIME).createConverter({'year': 'numeric'})}}",
      "properties": {
        "converter": {
          "description": "A converter (an object literal or instance that duck types Converter) used to format the labels of the major axis for all 'scale' values, or an object literal whose keys are 'scale' values that map specific converters for scale specific formatting (see ojTimeAxis.Converter). See DateTimeConverterFactory for details on creating built-in datetime converters. See the major-axis attribute for usage examples.",
          "type": "Object",
          "value": "{\"default\": null, \"seconds\": oj.Validation.converterFactory(oj.ConverterFactory.CONVERTER_TYPE_DATETIME).createConverter({'hour': 'numeric', 'minute': '2-digit', 'second': '2-digit'}), \"minutes\": oj.Validation.converterFactory(oj.ConverterFactory.CONVERTER_TYPE_DATETIME).createConverter({'hour': 'numeric', 'minute': '2-digit'}), \"hours\": oj.Validation.converterFactory(oj.ConverterFactory.CONVERTER_TYPE_DATETIME).createConverter({'hour': 'numeric'}), \"days\": oj.Validation.converterFactory(oj.ConverterFactory.CONVERTER_TYPE_DATETIME).createConverter({'month': 'numeric', 'day': '2-digit'}), \"weeks\": oj.Validation.converterFactory(oj.ConverterFactory.CONVERTER_TYPE_DATETIME).createConverter({'month': 'numeric', 'day': '2-digit'}), \"months\": oj.Validation.converterFactory(oj.ConverterFactory.CONVERTER_TYPE_DATETIME).createConverter({'month': 'long'}), \"quarters\": oj.Validation.converterFactory(oj.ConverterFactory.CONVERTER_TYPE_DATETIME).createConverter({'month': 'long'}), \"years\": oj.Validation.converterFactory(oj.ConverterFactory.CONVERTER_TYPE_DATETIME).createConverter({'year': 'numeric'})}"
        },
        "scale": {
          "description": "The time scale used for the major axis. See the major-axis attribute for usage examples.",
          "type": "string",
          "value": null,
          "enumValues": [
            "days",
            "hours",
            "minutes",
            "months",
            "quarters",
            "seconds",
            "weeks",
            "years"
          ],
          "propertyEditorValues": {
            "days": {
              "displayName": "Days"
            },
            "hours": {
              "displayName": "Hours"
            },
            "minutes": {
              "displayName": "Minutes"
            },
            "months": {
              "displayName": "Months"
            },
            "quarters": {
              "displayName": "Quarters"
            },
            "seconds": {
              "displayName": "Seconds"
            },
            "weeks": {
              "displayName": "Weeks"
            },
            "years": {
              "displayName": "Years"
            }
          }
        },
        "zoomOrder": {
          "description": "An array of strings containing the names of scales used for zooming from longest to shortest. If not specified, the 'scale' specified on the axis will be used at all zoom levels. See the major-axis attribute for usage examples.",
          "type": "Array<string>",
          "value": null
        }
      }
    },
    "minorAxis": {
      "description": "An object with the following properties, used to define the minor time axis. This is required in order for the Gantt to properly render.",
      "type": "Object",
      "displayName": "Minor Axis",
      "value": "{\"converter\": {\"default\": null, \"seconds\": oj.Validation.converterFactory(oj.ConverterFactory.CONVERTER_TYPE_DATETIME).createConverter({'hour': 'numeric', 'minute': '2-digit', 'second': '2-digit'}), \"minutes\": oj.Validation.converterFactory(oj.ConverterFactory.CONVERTER_TYPE_DATETIME).createConverter({'hour': 'numeric', 'minute': '2-digit'}), \"hours\": oj.Validation.converterFactory(oj.ConverterFactory.CONVERTER_TYPE_DATETIME).createConverter({'hour': 'numeric'}), \"days\": oj.Validation.converterFactory(oj.ConverterFactory.CONVERTER_TYPE_DATETIME).createConverter({'month': 'numeric', 'day': '2-digit'}), \"weeks\": oj.Validation.converterFactory(oj.ConverterFactory.CONVERTER_TYPE_DATETIME).createConverter({'month': 'numeric', 'day': '2-digit'}), \"months\": oj.Validation.converterFactory(oj.ConverterFactory.CONVERTER_TYPE_DATETIME).createConverter({'month': 'long'}), \"quarters\": oj.Validation.converterFactory(oj.ConverterFactory.CONVERTER_TYPE_DATETIME).createConverter({'month': 'long'}), \"years\": oj.Validation.converterFactory(oj.ConverterFactory.CONVERTER_TYPE_DATETIME).createConverter({'year': 'numeric'})}}",
      "properties": {
        "converter": {
          "description": "A converter (an object literal or instance that duck types Converter) used to format the labels of the minor axis for all 'scale' values, or an object literal whose keys are 'scale' values that map specific converters for scale specific formatting (see ojTimeAxis.Converter). See DateTimeConverterFactory for details on creating built-in datetime converters. See the minor-axis attribute for usage examples.",
          "type": "Object",
          "value": "{\"default\": null, \"seconds\": oj.Validation.converterFactory(oj.ConverterFactory.CONVERTER_TYPE_DATETIME).createConverter({'hour': 'numeric', 'minute': '2-digit', 'second': '2-digit'}), \"minutes\": oj.Validation.converterFactory(oj.ConverterFactory.CONVERTER_TYPE_DATETIME).createConverter({'hour': 'numeric', 'minute': '2-digit'}), \"hours\": oj.Validation.converterFactory(oj.ConverterFactory.CONVERTER_TYPE_DATETIME).createConverter({'hour': 'numeric'}), \"days\": oj.Validation.converterFactory(oj.ConverterFactory.CONVERTER_TYPE_DATETIME).createConverter({'month': 'numeric', 'day': '2-digit'}), \"weeks\": oj.Validation.converterFactory(oj.ConverterFactory.CONVERTER_TYPE_DATETIME).createConverter({'month': 'numeric', 'day': '2-digit'}), \"months\": oj.Validation.converterFactory(oj.ConverterFactory.CONVERTER_TYPE_DATETIME).createConverter({'month': 'long'}), \"quarters\": oj.Validation.converterFactory(oj.ConverterFactory.CONVERTER_TYPE_DATETIME).createConverter({'month': 'long'}), \"years\": oj.Validation.converterFactory(oj.ConverterFactory.CONVERTER_TYPE_DATETIME).createConverter({'year': 'numeric'})}"
        },
        "scale": {
          "description": "The time scale used for the minor axis. This is required in order for the Gantt to properly render. See the minor-axis attribute for usage examples.",
          "type": "string",
          "value": null,
          "enumValues": [
            "days",
            "hours",
            "minutes",
            "months",
            "quarters",
            "seconds",
            "weeks",
            "years"
          ],
          "propertyEditorValues": {
            "days": {
              "displayName": "Days"
            },
            "hours": {
              "displayName": "Hours"
            },
            "minutes": {
              "displayName": "Minutes"
            },
            "months": {
              "displayName": "Months"
            },
            "quarters": {
              "displayName": "Quarters"
            },
            "seconds": {
              "displayName": "Seconds"
            },
            "weeks": {
              "displayName": "Weeks"
            },
            "years": {
              "displayName": "Years"
            }
          }
        },
        "zoomOrder": {
          "description": "An array of strings containing the names of scales used for zooming from longest to shortest. If not specified, the 'scale' specified on the axis will be used at all zoom levels. See the minor-axis attribute for usage examples.",
          "type": "Array<string>",
          "value": null
        }
      }
    },
    "referenceObjects": {
      "description": "The array of reference objects associated with the gantt. For each reference object, a line is rendered at the specified value. Currently only the first reference object in the array is supported. Any additional objects supplied in the array will be ignored.",
      "type": "Array<Object>",
      "displayName": "Reference Objects",
      "value": []
    },
    "rowAxis": {
      "description": "An object defining properties for the row labels region.",
      "type": "Object",
      "displayName": "Row Axis",
      "value": {
        "rendered": "off",
        "maxWidth": "none"
      },
      "properties": {
        "maxWidth": {
          "description": "Defines the maximum width of the region in pixels (e.g. '50px') or percent (e.g. '15%') of the element width. If 'none' is specified, then the width has no maximum value. Labels will truncate to fit. See the row-axis attribute for usage examples.",
          "type": "string",
          "value": "none"
        },
        "rendered": {
          "description": "Defines whether row labels are rendered. See the row-axis attribute for usage examples.",
          "type": "string",
          "value": "off",
          "enumValues": [
            "off",
            "on"
          ],
          "propertyEditorValues": {
            "off": {
              "displayName": "Off"
            },
            "on": {
              "displayName": "On"
            }
          }
        }
      }
    },
    "rows": {
      "description": "An array of objects with the following properties, used to define rows and tasks within rows. Also accepts a Promise that will resolve with an array for deferred data rendering. No data will be rendered if the Promise is rejected.",
      "type": "Array<Object>|Promise",
      "displayName": "Rows",
      "value": null
    },
    "selection": {
      "description": "An array of strings containing the ids of the initially selected tasks.",
      "type": "Array<string>",
      "displayName": "Selection",
      "value": [],
      "writeback": true
    },
    "selectionMode": {
      "description": "The type of selection behavior that is enabled on the Gantt. If 'single' is specified, only a single task can be selected at once. If 'multiple', any number of tasks can be selected at once. Otherwise, selection is disabled.",
      "type": "string",
      "displayName": "Selection Mode",
      "value": "none",
      "enumValues": [
        "multiple",
        "none",
        "single"
      ],
      "propertyEditorValues": {
        "multiple": {
          "displayName": "Multiple"
        },
        "none": {
          "displayName": "None"
        },
        "single": {
          "displayName": "Single"
        }
      }
    },
    "start": {
      "description": "The start time of the Gantt. A valid value is required in order for the Gantt to properly render. See Date and Time Formats for more details on the required string formats.",
      "type": "string",
      "displayName": "Start",
      "value": ""
    },
    "taskDefaults": {
      "description": "An object with the following properties, used to define default styling for tasks in the Gantt. Properties specified on this object may be overridden by specifications on individual tasks.",
      "type": "Object",
      "displayName": "Task Defaults",
      "value": {
        "borderRadius": "0",
        "labelPosition": [
          "end",
          "innerCenter",
          "start",
          "max"
        ],
        "height": null,
        "svgClassName": "",
        "svgStyle": {},
        "type": "auto",
        "progress": {
          "borderRadius": "0",
          "height": "100%",
          "svgClassName": "",
          "svgStyle": {}
        },
        "baseline": {
          "borderRadius": 0,
          "height": null,
          "svgClassName": "",
          "svgStyle": {}
        }
      },
      "properties": {
        "baseline": {
          "description": "An object with the following properties, used to define default styling for task baseline elements. See the task-defaults attribute for usage examples.",
          "type": "Object",
          "value": {
            "borderRadius": 0,
            "svgClassName": "",
            "svgStyle": {}
          },
          "properties": {
            "borderRadius": {
              "description": "The border radius of the baseline. Accepts values allowed in CSS border-radius attribute. See the task-defaults attribute for usage examples.",
              "type": "string",
              "value": "0"
            },
            "height": {
              "description": "The height of the baseline in pixel. If not specified, a default height is used depending on the baseline type. See the task-defaults attribute for usage examples.",
              "type": "number",
              "value": null,
              "units": "pixels"
            },
            "svgClassName": {
              "description": "A space delimited list of CSS style classes defining the style of the baseline. See the task-defaults attribute for usage examples.",
              "type": "string",
              "value": ""
            },
            "svgStyle": {
              "description": "The CSS style defining the style of the baseline. See the task-defaults attribute for usage examples.",
              "type": "Object",
              "value": {}
            }
          }
        },
        "borderRadius": {
          "description": "The border radius of the task. Accepts values allowed in CSS border-radius attribute. See the task-defaults attribute for usage examples.",
          "type": "string",
          "value": "0"
        },
        "height": {
          "description": "The height of the task in pixel. If not specified, a default height is used depending on the task type, and whether the baseline is specified. See the task-defaults attribute for usage examples.",
          "type": "number",
          "value": null,
          "units": "pixels"
        },
        "labelPosition": {
          "description": "The position of the label relative to the task, or a priority order of label positions for the component to automatically choose from.",
          "type": "string|Array<string>",
          "value": "[end, innerCenter, start, max]",
          "enumValues": [
            "end",
            "innerCenter",
            "innerEnd",
            "innerStart",
            "none",
            "start"
          ],
          "propertyEditorValues": {
            "end": {
              "displayName": "End"
            },
            "innerCenter": {
              "displayName": "Inner Center"
            },
            "innerEnd": {
              "displayName": "Inner End"
            },
            "innerStart": {
              "displayName": "Inner Start"
            },
            "none": {
              "displayName": "None"
            },
            "start": {
              "displayName": "Start"
            }
          }
        },
        "progress": {
          "description": "An object with the following properties, used to define default styling for progress bars on non-milestone tasks. See the task-defaults attribute for usage examples.",
          "type": "Object",
          "value": {
            "borderRadius": "0",
            "height": "100%",
            "svgClassName": "",
            "svgStyle": {}
          },
          "properties": {
            "borderRadius": {
              "description": "The border radius of the progress bar. Accepts values allowed in CSS border-radius attribute. See the task-defaults attribute for usage examples.",
              "type": "string",
              "value": "0"
            },
            "height": {
              "description": "Specifies the height of the progress bar in pixels (e.g. '50px') or percent of the associated task bar (e.g. '15%'). See the task-defaults attribute for usage examples.",
              "type": "string",
              "value": "100%"
            },
            "svgClassName": {
              "description": "A space delimited list of CSS style classes to apply to the progress bar. Note that only CSS style applicable to SVG elements can be used. See the task-defaults attribute for usage examples.",
              "type": "string",
              "value": ""
            },
            "svgStyle": {
              "description": "The CSS inline style to apply to the progress bar. Only CSS style applicable to SVG elements can be used. See the task-defaults attribute for usage examples.",
              "type": "Object",
              "value": {}
            }
          }
        },
        "svgClassName": {
          "description": "A space delimited list of CSS style classes defining the style of the task. See the task-defaults attribute for usage examples.",
          "type": "string",
          "value": ""
        },
        "svgStyle": {
          "description": "The CSS style defining the style of the task. See the task-defaults attribute for usage examples.",
          "type": "Object",
          "value": {}
        },
        "type": {
          "description": "The type of task to be rendered.",
          "type": "string",
          "value": "auto",
          "enumValues": [
            "auto",
            "milestone",
            "normal",
            "summary"
          ],
          "propertyEditorValues": {
            "auto": {
              "displayName": "Auto"
            },
            "milestone": {
              "displayName": "Milestone"
            },
            "normal": {
              "displayName": "Normal"
            },
            "summary": {
              "displayName": "Summary"
            }
          }
        }
      }
    },
    "tooltip": {
      "description": "An object containing an optional callback function for tooltip customization.",
      "type": "Object",
      "displayName": "Tooltip",
      "value": {
        "renderer": null
      },
      "properties": {
        "renderer": {
          "description": "A function that returns a custom tooltip. Note that the default is for a tooltip to be displayed. See the tooltip attribute for usage examples.",
          "type": "function",
          "value": null
        }
      }
    },
    "trackResize": {
      "description": "Defines whether the element will automatically render in response to changes in size. If set to off, then the application is responsible for calling refresh to render the element at the new size.",
      "type": "string",
      "displayName": "Track Resize",
      "value": "on",
      "enumValues": [
        "off",
        "on"
      ],
      "propertyEditorValues": {
        "off": {
          "displayName": "Off"
        },
        "on": {
          "displayName": "On"
        }
      }
    },
    "translations": {
      "description": "A collection of translated resources from the translation bundle, or null if this\ncomponent has no resources. Resources may be accessed and overridden individually or collectively, as seen in the examples. If the component does not contain any translatable resource, the default value of this attribute will be \nnull. If not, an object containing all resources relevant to the component.\n\nIf this component has translations, their documentation immediately follows this doc entry.",
      "type": "Object|null",
      "displayName": "Translations",
      "translatable": true,
      "properties": {
        "accessibleDependencyInfo": {
          "description": "Provides properties to customize the screen reader text describing a specific dependency.\n\nSee the translations attribute for usage examples.",
          "type": "string",
          "value": "Dependency type {0}, connects {1} to {2}"
        },
        "accessiblePredecessorInfo": {
          "description": "Provides properties to customize the screen reader text describing predecessors of a task.\n\nSee the translations attribute for usage examples.",
          "type": "string",
          "value": "{0} predecessors"
        },
        "accessibleSuccessorInfo": {
          "description": "Provides properties to customize the screen reader text describing successors of a task.\n\nSee the translations attribute for usage examples.",
          "type": "string",
          "value": "{0} successors"
        },
        "accessibleTaskTypeMilestone": {
          "description": "Used to describe milestone task type for accessibility.\n\nSee the translations property for usage examples.",
          "type": "string",
          "value": "Milestone"
        },
        "accessibleTaskTypeSummary": {
          "description": "Used to describe summary task type for accessibility.\n\nSee the translations property for usage examples.",
          "type": "string",
          "value": "Summary"
        },
        "componentName": {
          "description": "Used to describe the data visualization type for accessibility.\n\nSee the translations attribute for usage examples.",
          "type": "string",
          "value": "Gantt"
        },
        "finishFinishDependencyAriaDesc": {
          "description": "Used to describe finish to finish dependency type for accessibility.\n\nSee the translations attribute for usage examples.",
          "type": "string",
          "value": "finish to finish"
        },
        "finishStartDependencyAriaDesc": {
          "description": "Used to describe finish to start dependency type for accessibility.\n\nSee the translations attribute for usage examples.",
          "type": "string",
          "value": "finish to start"
        },
        "labelAndValue": {
          "description": "Used to display a label and its value.\n\nSee the translations attribute for usage examples.",
          "type": "string",
          "value": "{0}: {1}"
        },
        "labelBaselineDate": {
          "description": "Used for the default tooltip label for baseline milestone information.\n\nSee the translations attribute for usage examples.",
          "type": "string",
          "value": "Baseline Date"
        },
        "labelBaselineEnd": {
          "description": "Used for the default tooltip label for baseline end time information.\n\nSee the translations attribute for usage examples.",
          "type": "string",
          "value": "Baseline End"
        },
        "labelBaselineStart": {
          "description": "Used for the default tooltip label for baseline start time information.\n\nSee the translations attribute for usage examples.",
          "type": "string",
          "value": "Baseline Start"
        },
        "labelClearSelection": {
          "description": "Text shown for clearing multiple selection on touch devices.\n\nSee the translations attribute for usage examples.",
          "type": "string",
          "value": "Clear Selection"
        },
        "labelCountWithTotal": {
          "description": "Used to display a count out of a total.\n\nSee the translations attribute for usage examples.",
          "type": "string",
          "value": "{0} of {1}"
        },
        "labelDataVisualization": {
          "description": "Label for data visualizations used for accessibility.\n\nSee the translations attribute for usage examples.",
          "type": "string",
          "value": "Data Visualization"
        },
        "labelDate": {
          "description": "Used for the default tooltip label for milestone information.\n\nSee the translations attribute for usage examples.",
          "type": "string",
          "value": "Date"
        },
        "labelEnd": {
          "description": "Used for the default tooltip label for end time information.\n\nSee the translations attribute for usage examples.",
          "type": "string",
          "value": "End"
        },
        "labelInvalidData": {
          "description": "Text shown when the component receives invalid data.\n\nSee the translations attribute for usage examples.",
          "type": "string",
          "value": "Invalid data"
        },
        "labelLabel": {
          "description": "Used for the default tooltip label for task label information.\n\nSee the translations attribute for usage examples.",
          "type": "string",
          "value": "Label"
        },
        "labelNoData": {
          "description": "Text shown when the component receives no data.\n\nSee the translations attribute for usage examples.",
          "type": "string",
          "value": "No data to display"
        },
        "labelProgress": {
          "description": "Used for the default tooltip label for task progress information.\n\nSee the translations attribute for usage examples.",
          "type": "string",
          "value": "Progress"
        },
        "labelRow": {
          "description": "Used for the default tooltip label for row information.\n\nSee the translations attribute for usage examples.",
          "type": "string",
          "value": "Row"
        },
        "labelStart": {
          "description": "Used for the default tooltip label for start time information.\n\nSee the translations attribute for usage examples.",
          "type": "string",
          "value": "Start"
        },
        "startFinishDependencyAriaDesc": {
          "description": "Used to describe start to finish dependency type for accessibility.\n\nSee the translations attribute for usage examples.",
          "type": "string",
          "value": "start to finish"
        },
        "startStartDependencyAriaDesc": {
          "description": "Used to describe start to start dependency type for accessibility.\n\nSee the translations attribute for usage examples.",
          "type": "string",
          "value": "start to start"
        },
        "stateCollapsed": {
          "description": "Used to describe the collapsed state for accessibility.\n\nSee the translations attribute for usage examples.",
          "type": "string",
          "value": "Collapsed"
        },
        "stateDrillable": {
          "description": "Used to describe a drillable object for accessibility.\n\nSee the translations attribute for usage examples.",
          "type": "string",
          "value": "Drillable"
        },
        "stateExpanded": {
          "description": "Used to describe the expanded state for accessibility.\n\nSee the translations attribute for usage examples.",
          "type": "string",
          "value": "Expanded"
        },
        "stateHidden": {
          "description": "Used to describe the hidden state for accessibility.\n\nSee the translations attribute for usage examples.",
          "type": "string",
          "value": "Hidden"
        },
        "stateIsolated": {
          "description": "Used to describe the isolated state for accessibility.\n\nSee the translations attribute for usage examples.",
          "type": "string",
          "value": "Isolated"
        },
        "stateMaximized": {
          "description": "Used to describe the maximized state for accessibility.\n\nSee the translations attribute for usage examples.",
          "type": "string",
          "value": "Maximized"
        },
        "stateMinimized": {
          "description": "Used to describe the minimized state for accessibility.\n\nSee the translations attribute for usage examples.",
          "type": "string",
          "value": "Minimized"
        },
        "stateSelected": {
          "description": "Used to describe the selected state for accessibility.\n\nSee the translations attribute for usage examples.",
          "type": "string",
          "value": "Selected"
        },
        "stateUnselected": {
          "description": "Used to describe the unselected state for accessibility.\n\nSee the translations attribute for usage examples.",
          "type": "string",
          "value": "Unselected"
        },
        "stateVisible": {
          "description": "Used to describe the visible state for accessibility.\n\nSee the translations attribute for usage examples.",
          "type": "string",
          "value": "Visible"
        },
        "tooltipZoomIn": {
          "description": "Used for the zoom in tooltip.\n\nSee the translations attribute for usage examples.",
          "type": "string",
          "value": "Zoom In"
        },
        "tooltipZoomOut": {
          "description": "Used for the zoom out tooltip.\n\nSee the translations attribute for usage examples.",
          "type": "string",
          "value": "Zoom Out"
        }
      }
    },
    "valueFormats": {
      "description": "An object specifying value formatting and tooltip behavior, whose keys generally correspond to task properties.",
      "type": "Object",
      "displayName": "Value Formats",
      "value": "{\"rows\": {\"tooltipDisplay\": \"auto\"}, \"start\": {\"converter\": null, \"tooltipDisplay\": \"auto\"}, \"end\": {\"converter\": null, \"tooltipDisplay\": \"auto\"}, \"date\": {\"converter\": null, \"tooltipDisplay\": \"auto\"}, \"label\": {\"tooltipDisplay\": \"auto\"}, \"progress\": {\"converter\": oj.Validation.converterFactory(oj.ConverterFactory.CONVERTER_TYPE_NUMBER).createConverter({style: 'percent'}), \"tooltipDisplay\": \"auto\"}, \"baselineStart\": {\"converter\": null, \"tooltipDisplay\": \"auto\"}, \"baselineEnd\": {\"converter\": null, \"tooltipDisplay\": \"auto\"}, \"baselineDate\": {\"converter\": null, \"tooltipDisplay\": \"auto\"}}",
      "properties": {
        "baselineDate": {
          "description": "Specifies tooltip behavior for the date value of the milestone baseline. See the value-formats attribute for usage examples.",
          "type": "Object",
          "value": {
            "converter": null,
            "tooltipDisplay": "auto"
          },
          "properties": {
            "converter": {
              "description": "A converter (an object literal or instance that duck types Converter) used to format the label. If not specified, a default converter depending on the axes scale is used. See DateTimeConverterFactory for details on creating built-in datetime converters. See the value-formats attribute for usage examples.",
              "type": "Object",
              "value": null
            },
            "tooltipDisplay": {
              "description": "Whether the value is displayed in the tooltip. See the value-formats attribute for usage examples.",
              "type": "string",
              "value": "auto",
              "enumValues": [
                "auto",
                "off"
              ],
              "propertyEditorValues": {
                "auto": {
                  "displayName": "Auto"
                },
                "off": {
                  "displayName": "Off"
                }
              }
            },
            "tooltipLabel": {
              "description": "A string representing the label that is displayed before the value in the tooltip. The default value comes from ojGantt.translations.labelBaselineDate. See the value-formats attribute for usage examples.",
              "type": "string",
              "translatable": true
            }
          }
        },
        "baselineEnd": {
          "description": "Specifies tooltip behavior for the end value of the baseline. See the value-formats attribute for usage examples.",
          "type": "Object",
          "value": {
            "converter": null,
            "tooltipDisplay": "auto"
          },
          "properties": {
            "converter": {
              "description": "A converter (an object literal or instance that duck types Converter) used to format the label. If not specified, a default converter depending on the axes scale is used. See DateTimeConverterFactory for details on creating built-in datetime converters. See the value-formats attribute for usage examples.",
              "type": "Object",
              "value": null
            },
            "tooltipDisplay": {
              "description": "Whether the value is displayed in the tooltip. See the value-formats attribute for usage examples.",
              "type": "string",
              "value": "auto",
              "enumValues": [
                "auto",
                "off"
              ],
              "propertyEditorValues": {
                "auto": {
                  "displayName": "Auto"
                },
                "off": {
                  "displayName": "Off"
                }
              }
            },
            "tooltipLabel": {
              "description": "A string representing the label that is displayed before the value in the tooltip. The default value comes from ojGantt.translations.labelBaselineEnd. See the value-formats attribute for usage examples.",
              "type": "string",
              "translatable": true
            }
          }
        },
        "baselineStart": {
          "description": "Specifies tooltip behavior for the start value of the baseline. See the value-formats attribute for usage examples.",
          "type": "Object",
          "value": {
            "converter": null,
            "tooltipDisplay": "auto"
          },
          "properties": {
            "converter": {
              "description": "A converter (an object literal or instance that duck types Converter) used to format the label. If not specified, a default converter depending on the axes scale is used. See DateTimeConverterFactory for details on creating built-in datetime converters. See the value-formats attribute for usage examples.",
              "type": "Object",
              "value": null
            },
            "tooltipDisplay": {
              "description": "Whether the value is displayed in the tooltip. See the value-formats attribute for usage examples.",
              "type": "string",
              "value": "auto",
              "enumValues": [
                "auto",
                "off"
              ],
              "propertyEditorValues": {
                "auto": {
                  "displayName": "Auto"
                },
                "off": {
                  "displayName": "Off"
                }
              }
            },
            "tooltipLabel": {
              "description": "A string representing the label that is displayed before the value in the tooltip. The default value comes from ojGantt.translations.labelBaselineStart. See the value-formats attribute for usage examples.",
              "type": "string",
              "translatable": true
            }
          }
        },
        "date": {
          "description": "Specifies tooltip behavior for the date value of a milestone task. See the value-formats attribute for usage examples.",
          "type": "Object",
          "value": {
            "converter": null,
            "tooltipDisplay": "auto"
          },
          "properties": {
            "converter": {
              "description": "A converter (an object literal or instance that duck types Converter) used to format the label. If not specified, a default converter depending on the axes scale is used. See DateTimeConverterFactory for details on creating built-in datetime converters. See the value-formats attribute for usage examples.",
              "type": "Object",
              "value": null
            },
            "tooltipDisplay": {
              "description": "Whether the value is displayed in the tooltip. See the value-formats attribute for usage examples.",
              "type": "string",
              "value": "auto",
              "enumValues": [
                "auto",
                "off"
              ],
              "propertyEditorValues": {
                "auto": {
                  "displayName": "Auto"
                },
                "off": {
                  "displayName": "Off"
                }
              }
            },
            "tooltipLabel": {
              "description": "A string representing the label that is displayed before the value in the tooltip. The default value comes from ojGantt.translations.labelDate. See the value-formats attribute for usage examples.",
              "type": "string",
              "translatable": true
            }
          }
        },
        "end": {
          "description": "Specifies tooltip behavior for the end value. See the value-formats attribute for usage examples.",
          "type": "Object",
          "value": {
            "converter": null,
            "tooltipDisplay": "auto"
          },
          "properties": {
            "converter": {
              "description": "A converter (an object literal or instance that duck types Converter) used to format the label. If not specified, a default converter depending on the axes scale is used. See DateTimeConverterFactory for details on creating built-in datetime converters. See the value-formats attribute for usage examples.",
              "type": "Object",
              "value": null
            },
            "tooltipDisplay": {
              "description": "Whether the value is displayed in the tooltip. See the value-formats attribute for usage examples.",
              "type": "string",
              "value": "auto",
              "enumValues": [
                "auto",
                "off"
              ],
              "propertyEditorValues": {
                "auto": {
                  "displayName": "Auto"
                },
                "off": {
                  "displayName": "Off"
                }
              }
            },
            "tooltipLabel": {
              "description": "A string representing the label that is displayed before the value in the tooltip. The default value comes from ojGantt.translations.labelEnd. See the value-formats attribute for usage examples.",
              "type": "string",
              "translatable": true
            }
          }
        },
        "label": {
          "description": "Specifies tooltip behavior for the label value. See the value-formats attribute for usage examples.",
          "type": "Object",
          "value": {
            "tooltipDisplay": "auto"
          },
          "properties": {
            "tooltipDisplay": {
              "description": "Whether the value is displayed in the tooltip. See the value-formats attribute for usage examples.",
              "type": "string",
              "value": "auto",
              "enumValues": [
                "auto",
                "off"
              ],
              "propertyEditorValues": {
                "auto": {
                  "displayName": "Auto"
                },
                "off": {
                  "displayName": "Off"
                }
              }
            },
            "tooltipLabel": {
              "description": "A string representing the label that is displayed before the value in the tooltip. The default value comes from ojGantt.translations.labelLabel. See the value-formats attribute for usage examples.",
              "type": "string",
              "translatable": true
            }
          }
        },
        "progress": {
          "description": "Specifies tooltip behavior for the progress value. See the value-formats attribute for usage examples.",
          "type": "Object",
          "value": "{\"converter\": oj.Validation.converterFactory(oj.ConverterFactory.CONVERTER_TYPE_NUMBER).createConverter({style: 'percent'}), \"tooltipDisplay\": \"auto\"}",
          "properties": {
            "converter": {
              "description": "A converter (an object literal or instance that duck types Converter) used to format the label. See NumberConverterFactory for details on creating built-in number converters. See the value-formats attribute for usage examples.",
              "type": "Object",
              "value": "oj.Validation.converterFactory(oj.ConverterFactory.CONVERTER_TYPE_NUMBER).createConverter({style: 'percent'})"
            },
            "tooltipDisplay": {
              "description": "Whether the value is displayed in the tooltip. See the value-formats attribute for usage examples.",
              "type": "string",
              "value": "auto",
              "enumValues": [
                "auto",
                "off"
              ],
              "propertyEditorValues": {
                "auto": {
                  "displayName": "Auto"
                },
                "off": {
                  "displayName": "Off"
                }
              }
            },
            "tooltipLabel": {
              "description": "A string representing the label that is displayed before the value in the tooltip. The default value comes from ojGantt.translations.labelProgress. See the value-formats attribute for usage examples.",
              "type": "string",
              "translatable": true
            }
          }
        },
        "row": {
          "description": "Specifies tooltip behavior for the row value. See the value-formats attribute for usage examples.",
          "type": "Object",
          "value": {
            "tooltipDisplay": "auto"
          },
          "properties": {
            "tooltipDisplay": {
              "description": "Whether the value is displayed in the tooltip. See the value-formats attribute for usage examples.",
              "type": "string",
              "value": "auto",
              "enumValues": [
                "auto",
                "off"
              ],
              "propertyEditorValues": {
                "auto": {
                  "displayName": "Auto"
                },
                "off": {
                  "displayName": "Off"
                }
              }
            },
            "tooltipLabel": {
              "description": "A string representing the label that is displayed before the value in the tooltip. The default value comes from ojGantt.translations.labelRow. See the value-formats attribute for usage examples.",
              "type": "string",
              "translatable": true
            }
          }
        },
        "start": {
          "description": "Specifies tooltip behavior for the start value. See the value-formats attribute for usage examples.",
          "type": "Object",
          "value": {
            "converter": null,
            "tooltipDisplay": "auto"
          },
          "properties": {
            "converter": {
              "description": "A converter (an object literal or instance that duck types Converter) used to format the label. If not specified, a default converter depending on the axes scale is used. See DateTimeConverterFactory for details on creating built-in datetime converters. See the value-formats attribute for usage examples.",
              "type": "Object",
              "value": null
            },
            "tooltipDisplay": {
              "description": "Whether the value is displayed in the tooltip. See the value-formats attribute for usage examples.",
              "type": "string",
              "value": "auto",
              "enumValues": [
                "auto",
                "off"
              ],
              "propertyEditorValues": {
                "auto": {
                  "displayName": "Auto"
                },
                "off": {
                  "displayName": "Off"
                }
              }
            },
            "tooltipLabel": {
              "description": "A string representing the label that is displayed before the value in the tooltip. The default value comes from ojGantt.translations.labelStart. See the value-formats attribute for usage examples.",
              "type": "string",
              "translatable": true
            }
          }
        }
      }
    },
    "viewportEnd": {
      "description": "The end time of the Gantt's viewport. If not specified or invalid, this will default to a value determined by the initial 'scale' of the minor axis and the width of the Gantt. See Date and Time Formats for more details on the required string formats.",
      "type": "string",
      "displayName": "Viewport End",
      "value": ""
    },
    "viewportStart": {
      "description": "The start time of the Gantt's viewport. If not specified or invalid, this will default to a value determined by the initial 'scale' of the minor axis and the width of the Gantt. See Date and Time Formats for more details on the required string formats.",
      "type": "string",
      "displayName": "Viewport Start",
      "value": ""
    }
  },
  "methods": {
    "getContextByNode": {
      "description": "Returns an object with context for the given child DOM node. This will always contain the subid for the node,\ndefined as the 'subId' property on the context object. Additional component specific information may also be included.\n\nFor more details on returned objects, see context objects.",
      "params": [
        {
          "name": "node",
          "description": "The child DOM node",
          "type": "Element"
        }
      ],
      "return": "Object|null"
    },
    "refresh": {
      "description": "Refreshes the component.",
      "return": "void"
    },
    "setProperty": {
      "description": "Sets a property or a single subproperty for complex properties and notifies the component\nof the change, triggering a [property]Changed event.",
      "params": [
        {
          "name": "property",
          "description": "The property name to set. Supports dot notation for subproperty access.",
          "type": "string"
        },
        {
          "name": "value",
          "description": "The new value to set the property to.",
          "type": "*"
        }
      ],
      "return": "void"
    },
    "getProperty": {
      "description": "Retrieves a value for a property or a single subproperty for complex properties.",
      "params": [
        {
          "name": "property",
          "description": "The property name to get. Supports dot notation for subproperty access.",
          "type": "string"
        }
      ],
      "return": "*"
    },
    "setProperties": {
      "description": "Performs a batch set of properties.",
      "params": [
        {
          "name": "properties",
          "description": "An object containing the property and value pairs to set.",
          "type": "Object"
        }
      ],
      "return": "void"
    }
  },
  "events": {
    "ojViewportChange": {
      "description": "Triggered after the viewport is changed due to a zoom or scroll operation.",
      "bubbles": true,
      "detail": {
        "viewportStart": {
          "description": "the start of the new viewport on a gantt chart",
          "type": "string"
        },
        "viewportEnd": {
          "description": "the end of the new viewport on a gantt chart",
          "type": "string"
        },
        "majorAxisScale": {
          "description": "the time scale of the majorAxis",
          "type": "string"
        },
        "minorAxisScale": {
          "description": "the time scale of the minorAxis",
          "type": "string"
        }
      }
    }
  },
  "slots": {
    "contextMenu": {
      "description": "The contextMenu slot is set on the oj-menu within this element. \nThis is used to designate the JET Menu that this component should launch as a context menu on right-click, Shift-F10, Press & Hold, or component-specific gesture. \nIf specified, the browser's native context menu will be replaced by the JET Menu specified in this slot.\n\nThe application can register a listener for the Menu's ojBeforeOpen event. The listener can cancel the launch via event.preventDefault(), \nor it can customize the menu contents by editing the menu DOM directly, and then calling refresh() on the Menu.\n\nTo help determine whether it's appropriate to cancel the launch or customize the menu, the ojBeforeOpen listener can use component API's to determine which \ntable cell, chart item, etc., is the target of the context menu. See the JSDoc and demos of the individual components for details. \n\nKeep in mind that any such logic must work whether the context menu was launched via right-click, Shift-F10, Press & Hold, or component-specific touch gesture."
    }
  }
}