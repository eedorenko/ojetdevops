define(["./defaultCacheHandler","./logger"],function(a,b){"use strict";function c(a,b){if(!a)throw TypeError("A name must be provided to create an OfflineCache!");if(!b)throw TypeError("A persistence store must be provided to create an OfflineCache!");this._name=a,this._store=b}function d(a,b,c){if(c&&c.length)for(var d=0;d<c.length;d++){var e=c[d];if(g(a,b,e))return e.responseData}return null}function e(a,b,c){var d=[];if(c&&c.length){d=c.filter(f(a,b)).map(function(a){return a.responseData})}return d}function f(a,b,c){return function(d){var e;return e=c?d[c]:d,g(a,b,e)}}function g(a,c,d){if(a)return!0;if(!d||!c)return!1;var e=d.requestData.headers,f=d.responseData.headers,g=c.headers,h=f.vary;if(b.log("Offline Persistence Toolkit OfflineCache: Processing HTTP Vary header"),!h)return!0;if("*"===h.trim())return!1;for(var i=h.split(","),j=0;j<i.length;j++){var k=i[j].toLowerCase(),l=g.get(k),m=e[k];if(b.log("Offline Persistence Toolkit OfflineCache: HTTP Vary header name: "+k),b.log("Offline Persistence Toolkit OfflineCache: Request HTTP Vary header value: "+l),b.log("Offline Persistence Toolkit OfflineCache: Cached HTTP Vary header value: "+m),!(!m&&!l||m&&l&&m===l))return!1}return!0}function h(c){if(c){b.log("Offline Persistence Toolkit OfflineCache: Converting cached entry to Response object");var d=[],e=c.bodyAbstract;return e?(d.push(Promise.resolve(JSON.parse(e))),delete c.bodyAbstract):d.push(Promise.resolve()),d.push(a.constructResponse(c)),Promise.all(d)}return Promise.resolve()}function i(a){if(a&&a.length){var b=a.map(function(a){return h(a)});return Promise.all(b)}return Promise.resolve()}function j(a){var b=a.map(function(a){return{name:a.name,keys:a.keys,resourceType:a.resourceType}});return JSON.stringify(b)}return c.prototype.getName=function(){return this._name},c.prototype.add=function(a){b.log("Offline Persistence Toolkit OfflineCache: add()");var c=this;return fetch(a).then(function(b){var d=b.clone();return c.put(a,b).then(function(){Promise.resolve(d)})})},c.prototype.addAll=function(a){b.log("Offline Persistence Toolkit OfflineCache: addAll()");var c=a.map(this.add,this);return Promise.all(c)},c.prototype.match=function(c,e){b.log("Offline Persistence Toolkit OfflineCache: match() for Request with url: "+c.url);var f=this,g=a.constructSearchCriteria(c,e),i=e&&e.ignoreVary;return f._store.find(g).then(function(a){return h(d(i,c,a))}).then(function(b){if(b){var d=b[0],e=b[1];return a.fillResponseBodyWithShreddedData(c,d,e)}return Promise.resolve()})},c.prototype.matchAll=function(c,d){b.log("Offline Persistence Toolkit OfflineCache: matchAll() for Request with url: "+c.url);var f=this,g=a.constructSearchCriteria(c,d),h=d&&d.ignoreVary;return f._store.find(g).then(function(a){return i(e(h,c,a))}).then(function(b){if(b&&b.length){var d=b.map(function(b){var d=b[0],e=b[1];return a.fillResponseBodyWithShreddedData(c,d,e)});return Promise.all(d)}return Promise.resolve([])})},c.prototype.put=function(c,d){b.log("Offline Persistence Toolkit OfflineCache: put() for Request with url: "+c.url);var e=this,f=[];return f.push(a.constructRequestResponseCacheData(c,d)),f.push(a.shredResponse(c,d)),Promise.all(f).then(function(b){var c=b[0],d=b[1];if(d){var f=[];return c.value.responseData.bodyAbstract=j(d),f.push(e._store.upsert(c.key,c.metadata,c.value)),f.push(a.cacheShreddedData(d)),Promise.all(f)}return e._store.upsert(c.key,c.metadata,c.value)})},c.prototype.delete=function(a,c){a?b.log("Offline Persistence Toolkit OfflineCache: delete() for Request with url: "+a.url):b.log("Offline Persistence Toolkit OfflineCache: delete()");var d=this;return d.keys(a,c).then(function(a){if(a&&a.length){var b=a.map(d._store.removeByKey,d._store);return Promise.all(b)}return!1}).then(function(a){return!(!a||!a.length)})},c.prototype.keys=function(c,d){c?b.log("Offline Persistence Toolkit OfflineCache: keys() for Request with url: "+c.url):b.log("Offline Persistence Toolkit OfflineCache: keys()");var e=this;if(c){var g=a.constructSearchCriteria(c,d);g.fields=["key","value"];var h=d&&d.ignoreVary;return e._store.find(g).then(function(a){if(a&&a.length){return a.filter(f(h,c,"value")).map(function(a){return a.key})}return[]})}return e._store.keys()},c.prototype.hasMatch=function(c,e){b.log("Offline Persistence Toolkit OfflineCache: hasMatch() for Request with url: "+c.url);var f=this,g=a.constructSearchCriteria(c,e),h=e&&e.ignoreVary;return f._store.find(g).then(function(a){return null!==d(h,c,a)})},c});
//# sourceMappingURL=OfflineCache.js.map